name: testbuild

on:
  push: 
    branches: [ '**' ]

env:
  configuration: Debug

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install .NET
      uses: actions/setup-dotnet@v4.1.0
      with:
        dotnet-version: | 
          8.0.x
          9.0.x

    - name: Restore
      run: dotnet restore
      working-directory: .     

    - name: Set Release Configuration
      run: echo "$Configuration=Release" >> $GITHUB_ENV
      if: ${{ startsWith(github.ref, 'refs/heads/release') }}

    - name: Build
      run: dotnet build -v:minimal --no-restore -c:${{ env.configuration }} 
      working-directory: .

    #- name: Run Unit Tests
    #  run: dotnet test --no-build -c:${{ env.configuration }} -p:CollectCoverage=true -p:CoverletOutputFormat=cobertura -p:CoverletOutput="./artifacts/coverage/coverage.xml" -p:Include="[${{ env.productNamespacePrefix}}*]*"
    #  working-directory: .

    - name: Pack
      run: dotnet pack -v:minimal --no-restore --no-build -c:${{ env.configuration }}
      working-directory: .

    - name: Create NuGet Artifacts
      uses: actions/upload-artifact@master
      with:
        name: nuget
        path: '**/*.nupkg'

  release:
    if: ${{ startsWith(github.ref, 'refs/heads/release') }}
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0       
    
    - name: Changelog
      uses: glennawatson/ChangeLog@v1
      id: changelog

    - uses: actions-ecosystem/action-regex-match@v2
      id: version-match
      with:
        text: ${{ github.ref }}
        regex: '^refs/heads/release/v(\\d+\\.\\d+\\.\\d+)'
    
    - name: Download NuGet Packages
      uses: actions/download-artifact@v4
      with:
        name: nuget  

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.version-match.ouputs.group1 }}
        body: |
          ${{ steps.changelog.outputs.commitLog }}
        files: |
          ${{ '**/*.nupkg' }}
     
  publish:
    if: ${{ startsWith(github.ref, 'refs/heads/release') || github.ref == 'refs/heads/main' }}
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Download NuGet Packages
      uses: actions/download-artifact@v4
      with:
        name: nuget  
    
    - name: NuGet Push
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.NUGET_API_KEY }} # Set nuget api token in repository secrets
        SOURCE_URL: https://api.nuget.org/v3/index.json
      run: |
        dotnet nuget push -s ${{ env.SOURCE_URL }} -k ${{ env.NUGET_AUTH_TOKEN }} **/*.nupkg